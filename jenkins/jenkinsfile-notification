def COLOR_MAP = ['SUCCESS': 'good', 'UNSTABLE': 'warning', 'FAILURE': 'danger']
pipeline {
  agent any

  tools {
    maven 'MAVEN3'
    jdk 'OracleJDK11'
  }

  stages {
    stage ('Fetch code') {
      steps {
        git branch: 'vp-rem', url: 'https://github.com/devopshydclub/vprofile-repo.git'
      }
    }

    stage ('CheckStyle') {
      steps {
        sh 'mvn checkstyle:checkstyle'
      }
    }

    stage ('UniTest') {
      steps {
        sh 'mvn test'
      }
    }

    stage ('Build') {
      steps {
        sh 'mvn install -DskipTests'
      }
    }

    stage ('Sonar-scanner') {
      tools {
        jdk 'OracleJDK17'
      }

      environment {
        SONAR_HOME = tool 'Sonar_6.2'
      }

      steps {
        sh '''${SONAR_HOME}/bin/sonar-scanner -Dsonar.projectKey=vprofile \
        -Dsonar.projectName=vprofile-repo \
        -Dsonar.version=1.$BUILD_ID \
        -Dsonar.sources=src/ \
        -Dsonar.java.bineries=target/test-classes/com/visualpathit/account/ \
        -Dsonar.junit.reportsPath=target/surefire-reports/ \
        -Dsonar.jacoco.reportsPath=target/jacoco.exec \
        -Dsonar.java.libreries= \
        -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml
        '''
      }
    }

    stage ('Quality Gates') {
      steps {
        timeout(1) {
          waitForQualityGate abortPipeline: true
        }
      }
    }

    stage ('Upload artifact to nexus') {
      steps {
        script {
          def artifactDir = 'target'

          def artifacts = sh(script: "find ${artifactDir} -type f -maxdepth 1 \\( -name '*.war' -o -name '*.jar' \\)", returnStdout: true).trim().split('\n')

          def nexusArtifacts = []

          for (artifact in artifacts ) {
            def artifactName = artifact.tokenize('/').last()
            nexusArtifacts.add([
              artifactId: artifactName.tokenize('.').first(),
              classifier: '',
              file: artifact,
              type: artifactName.tokenize('.').last()
            ])
          }

          nexusArtifactUploader(
            artifacts: nexusArtifacts,
            credentialsId: 'nexus_auth',
            groupId: 'test',
            nexusUrl: '192.168.56.21:8081',
            nexusVersion: 'nexus3',
            protocol: 'http',
            repo: 'vprofile-repo',
            version: "${env.BUILD_ID}"
          )
        }
      }
    }
  }

  post {
    always {
      slackSend channel: '#vprofile',
      color: COLOR_MAP[currentBuild.currentResult],
      message: "_${currentBuild.currentResult}:_ Job ${env.JOB_NAME} build ${env.BUILD_DISPLAY_NAME}.\nTo see details: ${env.BUILD_URL}console"
    }
  }
}